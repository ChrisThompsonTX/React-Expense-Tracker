{"version":3,"sources":["components/header.js","context/AppReducer.js","context/globalState.js","components/balance.js","components/incomeExpenses.js","components/transaction.js","components/transactionList.js","components/addTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlfor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adc60cfc.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default (state, action) => {\n    switch(action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState = {\n    transactions: []\n}\n\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    //Actions\n\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        });\n    }\n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/globalState'\n\nexport const Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>${total}</h1>\n        </>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/globalState';\n\nexport const IncomeExpenses = () => {\n    const { transactions } = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    const expense = (\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n        -1\n    ).toFixed(2);\n\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">+${income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className=\"money minus\">-${expense}</p>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/globalState';\n\nexport const Transaction = ({ transaction }) => {\n    const sign = transaction.amount < 0 ? '-' : '+';\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    return (\n        <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\n            <button className=\"delete-btn\" \n            onClick={() => deleteTransaction(transaction.id)} >x</button>\n        </li>\n    )\n}\n","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/globalState';\nimport { Transaction } from './transaction';\n\nexport const TransactionList = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    return (\n        <>\n            <h3>History</h3>\n            <ul className=\"list\">\n                {transactions.map(transaction=> (\n                    <Transaction key={transaction.id} transaction={transaction}/>\n                ))}\n            </ul>\n        </>\n    )\n}\n","import React, {useState, useContext} from 'react';\nimport { GlobalContext } from '../context/globalState';\n\nexport const AddTransaction = () => {\n    const { addTransaction } = useContext(GlobalContext);\n\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000),\n            text,\n            amount: +amount\n        }\n\n        addTransaction(newTransaction);\n    }\n\n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlfor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlfor=\"amount\"\n                    >Amount <br />\n                        (negative - expense, positive - income)</label\n                    >\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Header } from './components/header';\nimport { Balance } from './components/balance';\nimport { IncomeExpenses } from './components/incomeExpenses';\nimport { TransactionList } from './components/transactionList';\nimport { AddTransaction } from './components/addTransaction';\nimport './App.css';\n\nimport{ GlobalProvider } from './context/globalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n      </div>\n      <IncomeExpenses />\n      <TransactionList />\n      <AddTransaction />\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}